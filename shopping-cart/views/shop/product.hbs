<div class="container">
	<div class="card">
		<div class="row">
			<aside class="col-sm-5 border-right">
				<article class="gallery-wrap">
					<div class="img-big-wrap">
						<div> <a href="#"><img src="{{product.imagePath}}"></a></div>
					</div> <!-- slider-product.// -->
				</article> <!-- gallery-wrap .end// -->
			</aside>
			<aside class="col-sm-7">
				<article class="card-body p-5">
					<h3 class="title mb-3">{{product.name}}</h3>

					<p class="price-detail-wrap">
						<span class="price h3 text-warning">
							<span class="currency">CAN $</span><span class="num">{{product.price}}<span>
						</span>
					</p> <!-- price-detail-wrap .// -->
					<dl class="item-property">
						<dt>Description</dt>
						<dd>
							<p>{{product.description}}</p>
						</dd>
					</dl>
					<dl class="param param-feature">
						<dt>Delivery</dt>
						<dd>Canada, USA</dd>
					</dl> <!-- item-property-hor .// -->
					<hr>
					<dl class="param param-feature">
						<dt>Rating</dt>
						<dd>
							<span class="fa fa-star checked"></span>
							<span class="fa fa-star checked"></span>
							<span class="fa fa-star checked"></span>
							<span class="fa fa-star"></span>
							<span class="fa fa-star"></span>
						</dd>
					</dl>
					<hr>
					<div class="row">
						<div class="col-sm-5">
							<dl class="param param-inline">
								<dt>Quantity: </dt>
								<dd>
									<select class="form-control form-control-sm" style="width:70px;">
										<option> 1 </option>
										<option> 2 </option>
										<option> 3 </option>
									</select>
								</dd>
							</dl> <!-- item-property .// -->
						</div> <!-- col.// -->
						<div class="col-sm-7">
						</div> <!-- col.// -->
					</div> <!-- row.// -->
					<hr>
					<a href="#" class="btn btn-lg btn-primary text-uppercase"> <i class="fas fa-shopping-cart"></i> Add to
						cart </a>
				</article> <!-- card-body.// -->
			</aside> <!-- col.// -->
		</div> <!-- row.// -->
	</div> <!-- card.// -->

          <p class="price-detail-wrap">
            <span class="price h3 text-warning">
              <span class="currency">CAN $</span><span id="productPrice" class="num">{{product.price}}
              </span>
          </p>
          <dl class="item-property">
            <dt>Description</dt>
            <dd>
              <p id="description">{{product.description}}</p>
            </dd>
          </dl>
          <dl class="param param-feature">
            <dt>Delivery</dt>
            <dd>Canada, USA</dd>
          </dl>
          <hr>
          <dl class="param param-feature">
            <dt>Rating</dt>
            <dd><span class="rating" style="display: inline-block" data-default-rating="{{product.rating}}"></span></dd>
          </dl>
          <script>
            function StarRating(target) {
              function attr(name, d) {
                var a = target.getAttribute(name);
                return (a ? a : d);
              }
              var max = parseInt(attr('data-stars', 5)),
                disabled = typeof target.getAttribute('disabled') != 'undefined',
                defaultRating = parseFloat(attr('data-default-rating', 0)),
                currentRating = -1,
                stars = [];

              target.style.display = 'inline-block';

              for (var s = 0; s < max; s++) {
                var n = document.createElement('span');
                n.className = 'star';
                n.addEventListener('click', starClick);
                if (s > 0)
                  stars[s - 1].appendChild(n);
                else
                  target.appendChild(n);

                stars.push(n);
              }

              function disable() {
                target.setAttribute('disabled', '');
                disabled = true;
              }
              this.disable = disable;

              function enable() {
                target.removeAttribute('disabled');
                disabled = false;
              }
              this.enable = enable;

              function setCurrentRating(rating) {
                currentRating = rating;
                target.setAttribute('data-rating', currentRating);
                showCurrentRating();
              }
              this.setCurrentRating = setCurrentRating;

              function setDefaultRating(rating) {
                defaultRating = rating;
                target.setAttribute('data-default-rating', defaultRating);
                showDefaultRating();
              }
              this.setDefaultRating = setDefaultRating;

              this.onrate = function (rating) { };

              target.addEventListener('mouseout', function () {
                disabled = target.getAttribute('disabled') !== null;
                if (!disabled)
                  showCurrentRating();
              });

              target.addEventListener('mouseover', function () {
                disabled = target.getAttribute('disabled') !== null;
                if (!disabled)
                  clearRating();
              });

              showDefaultRating();

              function showRating(r) {
                clearRating();
                for (var i = 0; i < stars.length; i++) {
                  if (i >= r)
                    break;
                  if (i === Math.floor(r) && i !== r)
                    stars[i].classList.add('half');
                  stars[i].classList.add('active');
                }
              }

              function showCurrentRating() {
                var ratingAttr = parseFloat(attr('data-rating', 0));
                if (ratingAttr) {
                  currentRating = ratingAttr;
                  showRating(currentRating);
                } else {
                  showDefaultRating();
                }
              }

              function showDefaultRating() {
                defaultRating = parseFloat(attr('data-default-rating', 0));
                showRating(defaultRating);
              }

              function clearRating() {
                for (var i = 0; i < stars.length; i++) {
                  stars[i].classList.remove('active');
                  stars[i].classList.remove('half');
                }
              }

              function starClick(e) {
                if (disabled) return;

                if (this === e.target) {
                  var starClicked = stars.indexOf(e.target);
                  if (starClicked !== -1) {
                    var starRating = starClicked + 1;
                    setCurrentRating(starRating);
                    if (typeof this.onrate === 'function')
                      this.onrate(currentRating);
                    var evt = new CustomEvent('rate', {
                      detail: starRating,
                    });
                    target.dispatchEvent(evt);
                  }
                }
              }
            }
            var ratings = document.getElementsByClassName('rating');

            for (var i = 0; i < ratings.length; i++) {
              var r = new StarRating(ratings[i]);
              ratings[i].addEventListener('rate', function (e) {
                console.log('Rating: ' + e.detail);

                var pname = document.getElementById("pname").innerText;
                let obj = { pname: pname, rating: e.detail }
                let req = new XMLHttpRequest();
                req.open('POST', `/rating`);
                req.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
                req.responseType = 'json';
                req.onload = function (evt) {
                  if (req.status == 200) { // check for ok response
                    const resp = req.response;
                    console.log(resp);
                    //ratings.setAttribute("data-default-rating", resp);
                  }
                  else {
                    console.log('err', req);
                  }
                };
                console.log('sending', obj);
                req.send(JSON.stringify(obj));
              });
            }
          </script>
          <hr>
          <div class="row">
            <div class="col-sm-5">
              <dl class="param param-inline">
                <dt>Quantity: </dt>
                <dd>
                  <select id="qty" class="form-control form-control-sm" style="width:70px;">
                    <option value="1"> 1 </option>
                    <option value="2"> 2 </option>
                    <option value="3"> 3 </option>
                    <option value="4"> 4 </option>
                    <option value="5"> 5 </option>
                    <option value="6"> 6 </option>
                    <option value="7"> 7 </option>
                  </select>
                </dd>
              </dl>
            </div>
            <div class="col-sm-7">
            </div>
          </div>
          <hr>
          <a href="/product/{{product.id}}" id="addButton" class="btn btn-lg btn-primary text-uppercase"> <i
              class="fas fa-shopping-cart"></i> Add to
            cart </a>
          <a href="/products" id="addButton" class="btn btn-lg btn-primary text-uppercase"> <i
              class="fas fa-arrow-left"></i> Back to Shopping</a>
        </article>
      </aside>
    </div>
  </div>
</div>
<script>
  const addButton = document.getElementById('addButton');
  const imagePath = document.getElementById('img').src;
  const pname = document.getElementById('pname').textContent;
  const pdescription = document.getElementById('description').innerText;
  let purl = document.getElementById('addButton').href;
  let pid = (purl.match(/(\d+)/g) || []);
  let price = parseFloat(document.getElementById('productPrice').innerText);
  let idx = document.getElementById('qty').selectedIndex;

  addButton.addEventListener('click', (evt) => {
    let idx = document.getElementById('qty').selectedIndex;
    let options = document.getElementById('qty').options;
    let qty = parseInt(options[idx].text);
    let obj = { pid: pid[1], image: imagePath, productName: pname, productPrice: price, description: pdescription, qty: qty };
    let req = new XMLHttpRequest();
    req.open('POST', `/add-to-cart/:id`);
    req.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
    req.responseType = 'json';
    req.onload = function (evt) {
      if (req.status == 200) { // check for ok response
        const resp = req.response;
        console.log(resp);
        window.alert("Item has been added to the cart");
      }
      else {
        console.log('err', req);
      }
    };
    console.log('sending', obj);
    req.send(JSON.stringify(obj));
  });
</script>

<hr>

<div class="container">
  <div class="row">
    <div class="col-md-8">
      <div class="page-header">
        <h1><small class="pull-right">45 comments</small> </h1>
      </div>
      <hr>
      <div class="comments-list">
        <div class="media">
          <div class="media-body">
            <h4 class="media-heading user_name">Baltej Singh</h4>
            Wow! this is really great.
          </div>
        </div>
        <div class="media">
          <div class="media-body">
            <h4 class="media-heading user_name">Baltej Singh</h4>
            Wow! this is really great.
          </div>
        </div>
        <div class="media">
          <div class="media-body">
            <h4 class="media-heading user_name">Baltej Singh</h4>
            Wow! this is really great.
          </div>
        </div>
        <div class="media">
          <div class="media-body">
            <h4 class="media-heading user_name">Baltej Singh</h4>
            Wow! this is really great.
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<hr>
<div class="container">
  <form>
    <div class="form-group">
      <label for="comment">Comment:</label>
      <textarea class="form-control" rows="5" id="comment"></textarea>
    </div>
  </form>
</div>
